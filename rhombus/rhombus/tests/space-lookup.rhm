#lang rhombus/and_meta

space.transform food:
  space_path rhombus/example/food
  bridge_definer bridge
  meta_namespace food_meta:
    reflection space
    name_start_syntax_class NameStart

check:
  food.bridge cake:
    "pineapple upsidedown"
  expr.macro 'go':
    '$(syntax_meta.value('cake', food_meta.space))'
  go
  ~is "pineapple upsidedown"

check:
  namespace bakery:
    export cake
    food.bridge cake:
      "chocolate"
  expr.macro 'go':
    '$(syntax_meta.value('bakery.cake', food_meta.space))'
  go
  ~is "chocolate"

block:
  namespace bakery:
    export cake
    food.bridge cake:
      "chocolate"
  expr.macro 'go $(seq :: food_meta.NameStart) $()':
    '[$(syntax_meta.value(seq.name, food_meta.space, fun (): '#false')),
      '$seq.tail ...']'
  check: go bakery.cake + icing
         ~matches ["chocolate", '+ icing']
  check: go bakery.cake.to.go
         ~matches ["chocolate", '. to . go']
  check: go non_cake.to.go
         ~matches [#false, '. to . go']

check:
  food.bridge List.cake:
    "tiered"
  expr.macro 'go':
    '$(syntax_meta.value('List.cake', food_meta.space))'
  go
  ~is "tiered"
