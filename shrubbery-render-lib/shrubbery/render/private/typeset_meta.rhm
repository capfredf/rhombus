#lang rhombus/static/and_meta

import:
  meta:
    lib("racket/base.rkt")

export:
  typeset
  meta:
    Transformer
    make_Transformer
    Transformer_proc
    Replacer
    make_Replacer
    Spacer
    make_Spacer
    in_space
    rename:
      also_space as space
    // typeset_meta.NameStart below

space.transform typeset:
  space_path rhombus/scribble/typeset
  meta_namespace typeset_meta:
    name_start_syntax_class NameStart
    reflection space

meta:
  export:
    typeset_meta.NameStart

meta:
  class Transformer(proc)
  class Replacer(proc)
  class Spacer(contexts :~ List, proc, can_infix)

  fun make_Transformer(proc):
    Transformer(proc)

  fun Transformer_proc(t):
    Transformer.proc(t)

  fun make_Replacer(proc):
    Replacer(proc)

  fun make_Spacer(contexts, proc, modes):
    Spacer(contexts, proc, modes)

  fun in_space(stx):
    base.#{make-interned-syntax-introducer}(#'#{rhombus/scribble/typeset})(stx)

  def also_space = typeset_meta.space
